# Forked from https://github.com/dawidd6/homebrew-test-tap-new/blob/main/.github/workflows/tests.yml

name: brew test-bot
on:
  push:
    branches:
    - main
jobs:
  test-bot:
    strategy:
      matrix:
        os: [macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - run: brew style Formula/*

      - run: brew test-bot --only-cleanup-before Formula/*

      - run: brew test-bot --only-setup Formula/*

      - run: brew test-bot --only-tap-syntax

      - run: brew test-bot --only-formulae Formula/aoflagger.rb Formula/erfa.rb Formula/birli.rb

      - name: Get version number from current date
        id: date
        run: echo "date=$(date +'v%Y.%m.%d.%H.%M')" >> "$GITHUB_OUTPUT"

      - name: get archive names
        id: archive_names
        run: |
          pwd
          ls -alR ..
          {
            echo "aoflagger_path=$(ls aoflagger--*.bottle*.tar.gz)"
            echo "erfa_path=$(ls erfa--*.bottle*.tar.gz)"
            echo "birli_path=$(ls birli--*.bottle*.tar.gz)"
          } >> "$GITHUB_OUTPUT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ steps.date.outputs.date }}
          body: |
            Brew bottles for casacore / aoflagger
          draft: false
          prerelease: false
      # - name: Upload Casacore-data Release Asset
      #   continue-on-error: true
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ steps.archive_names.outputs.casacore_data_path }}
      #     asset_name: ${{ steps.archive_names.outputs.casacore_data_path }}
      #     asset_content_type: application/gzip
      # - name: Upload Casacore Release Asset
      #   continue-on-error: true
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ steps.archive_names.outputs.casacore_path }}
      #     asset_name: ${{ steps.archive_names.outputs.casacore_path }}
      #     asset_content_type: application/gzip
      - name: Upload Aoflagger Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.archive_names.outputs.aoflagger_path }}
          asset_name: ${{ steps.archive_names.outputs.aoflagger_path }}
          asset_content_type: application/gzip
      # - name: Upload MWALib Release Asset
      #   uses: actions/upload-release-asset@v1
      #   continue-on-error: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ steps.archive_names.outputs.mwalib_path }}
      #     asset_name: ${{ steps.archive_names.outputs.mwalib_path }}
      #     asset_content_type: application/gzip
      - name: Upload ERFA Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.archive_names.outputs.erfa_path }}
          asset_name: ${{ steps.archive_names.outputs.erfa_path }}
          asset_content_type: application/gzip
      - name: Upload Birli Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.archive_names.outputs.birli_path }}
          asset_name: ${{ steps.archive_names.outputs.birli_path }}
          asset_content_type: application/gzip
